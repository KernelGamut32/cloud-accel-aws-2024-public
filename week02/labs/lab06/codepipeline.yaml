AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Generator: "former2"
Description: ""

Parameters:
    BuildSpecBucketName:
        Type: String
        Description: "Bucket used for storage of initial source code"

Resources:
    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Sub "codepipeline-lab-${AWS::Region}-${AWS::AccountId}-capdelta"
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                        SSEAlgorithm: "AES256"
                      BucketKeyEnabled: false
            OwnershipControls:
                Rules:
                    - ObjectOwnership: "BucketOwnerEnforced"
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true

    CodePipelineRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Sid: AllowAssumeRole
                  Effect: Allow
                  Principal:
                    Service: "codepipeline.amazonaws.com"
                  Action: "sts:AssumeRole"
        ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/AdministratorAccess"

    CodeBuildRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Sid: AllowAssumeRole
                  Effect: Allow
                  Principal:
                    Service: "codebuild.amazonaws.com"
                  Action: "sts:AssumeRole"
        ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/AdministratorAccess"

    CodeCommitRepository:
        Type: "AWS::CodeCommit::Repository"
        Properties:
            RepositoryName: "cicd-stepfunctions"
            Code:
              S3:
                Bucket: !Ref BuildSpecBucketName
                Key: source.zip

    CodeBuildProject:
        Type: "AWS::CodeBuild::Project"
        Properties:
            Name: !Sub "${CodeCommitRepository.Name}-build"
            Source:
                GitCloneDepth: 1
                GitSubmodulesConfig: 
                    FetchSubmodules: false
                InsecureSsl: false
                Location: !GetAtt CodeCommitRepository.CloneUrlHttp
                Type: "CODECOMMIT"
            Artifacts:
                Type: "NO_ARTIFACTS"
            Cache: 
                Type: "NO_CACHE"
            Environment: 
                ComputeType: "BUILD_GENERAL1_SMALL"
                Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
                ImagePullCredentialsType: "CODEBUILD"
                PrivilegedMode: false
                Type: "LINUX_CONTAINER"
            ServiceRole: !GetAtt CodeBuildRole.Arn
            TimeoutInMinutes: 60
            QueuedTimeoutInMinutes: 480
            EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
            BadgeEnabled: false
            LogsConfig: 
                CloudWatchLogs: 
                    Status: "ENABLED"
                S3Logs: 
                    Status: "DISABLED"
                    EncryptionDisabled: false
            Visibility: "PRIVATE"

    CodePipelinePipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: !GetAtt CodeCommitRepository.Name
            RoleArn: !GetAtt CodePipelineRole.Arn
            ArtifactStore:
                Location: !Ref S3Bucket
                Type: "S3"
            Stages:
                - Name: "Source"
                  Actions:
                    - Name: "Source"
                      ActionTypeId:
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeCommit"
                        Version: "1"
                      Configuration:
                        BranchName: "main"
                        OutputArtifactFormat: "CODE_ZIP"
                        PollForSourceChanges: "false"
                        RepositoryName: !GetAtt CodeCommitRepository.Name
                      OutputArtifacts:
                        - Name: "SourceArtifact"
                      Region: !Ref AWS::Region
                      Namespace: "SourceVariables"
                      RunOrder: 1
                - Name: "Build"
                  Actions:
                    - Name: "Build"
                      ActionTypeId:
                        Category: "Build"
                        Owner: "AWS"
                        Provider: "CodeBuild"
                        Version: "1"
                      Configuration:
                        ProjectName: !Sub "${CodeCommitRepository.Name}-build"
                      InputArtifacts:
                        - Name: "SourceArtifact"
                      OutputArtifacts:
                        - Name: "BuildArtifact"
                      Region: !Ref AWS::Region
                      Namespace: "BuildVariables"
                      RunOrder: 1
